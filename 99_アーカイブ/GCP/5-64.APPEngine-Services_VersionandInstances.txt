Happen in service work in any instances.

Let's look at you know how these concepts are baked inside App Engine.

If we look at the hierarchy application has got a service in it and you can have different services

and onto which you can you can deploy multiple applications with different service name altogether but

application has got a service in it and the service has gotten multiple versions of that particular

service running inside the app engine.

So you can think of.

If you say apply new virgin it will be available as additional virgin here and you can on the service

itself.

You can do a traffic splitting so you can decide what you know how much traffic it should go to work

in one versus how much traffic it should go to watch and 2.

Okay.

And then for each and every.

Then you have instances running and you can have different scaling mechanism implemented in different

zones so you can configure that that you can have auto scaling as well as manual scaling and basic scaling

as well we are going to see that but the instances are that's where you can define you know how many

minimum number of instances should be running forever or not at all running the instances.

We are going to see that how it works but that's the hierarchy which you can see it.

So if at all you need an additional service you can deploy it and then it will get deployed.

If I go back to our application which we just saw.

So this is the dashboard.

It's going to take some time for you to get this that dashboard so I have deployed another virgin right

now and you can see my service is a default service and I have two virgins here.

OK.

And then I can click on the versions and you can see the two versions here.

Likewise so this is the service service has got a multiple to agents and these virgins has got the instance

running to serve the two so the Lords okay.

So it has got only two loads and this is you know that instance which is running right now so availability

is dynamic and the scaling is at a scale.

These are just called in for you know the instances which are running I again refresh

so if I create multiple requests it should be it should appear here.

We'll talk about security scan later but yeah.

That's the service virgin and instances hierarchy and that is how you can browse your application information.

But if we can go to dashboard I did show you all the information here and like how much it is going

to be charged.

What is the what is the pricing mechanism if at all there are any errors were how what that error reporting

are.

Okay.

All of that information is here and you can have multiple variants you can you can go ahead and do a

traffic splitting so you can say split the traffic and I can configure

how the traffic is treated but that's the virgin service an application hierarchy.

どのような場合でも、インサービス作業が発生します。

App Engine内でこれらの概念がどのように焼き付けられているかを見てみましょう。

階層アプリケーションを見ると、その中にサービスがあり、異なるサービスを持つことができます

そして、その上に異なるサービス名で複数のアプリケーションをデプロイできますが、

アプリケーションにはサービスがあり、サービスはその特定の複数のバージョンを取得しています

App Engine内で実行されるサービス。

だからあなたは考えることができます。

新しいバージンを適用すると言うと、ここで追加のバージンとして利用できます。

自体。

トラフィックの分割を行うことができるので、どのくらいのトラフィックが動作するかを知っているかを判断できます

監視するのに必要なトラフィック量と1対2。

はい。

そして、それぞれのために。

次に、インスタンスを実行し、異なるスケーリングメカニズムを異なる場所に実装することができます

ゾーン。手動スケーリングと基本スケーリングだけでなく自動スケーリングも行えるように構成できます

また、それを確認しますが、インスタンスは、定義できる場所です。

インスタンスの最小数は永久に実行するか、インスタンスを実行しないようにする必要があります。

それがどのように機能するかを見ていきますが、それはあなたがそれを見ることができる階層です。

そのため、追加のサービスが必要な場合は、展開してから展開できます。

先ほど見たアプリケーションに戻ります。

これがダッシュボードです。

このダッシュボードを取得するにはしばらく時間がかかるので、もう1つの新しいバージンをデプロイしました。

これで、私のサービスがデフォルトのサービスであり、ここに2つのバージンがあることがわかります。

OK。

そして、バージョンをクリックすると、ここに2つのバージョンが表示されます。

同様に、これはサービスサービスがエージェントに対して複数を持ち、これらのバージンがインスタンスを持っていることです

2人に仕えるために走ります

負荷は2つしかありません。これは、現在実行中のインスタンスです。

動的であり、スケーリングは一定のスケールです。

これらは、実行中のインスタンスを知っているために呼び出されます

したがって、複数のリクエストを作成する場合、ここに表示されるはずです。

セキュリティスキャンについては後で説明しますが、そうです。

これがサービスバージンとインスタンスの階層であり、アプリケーション情報を参照する方法です。

しかし、ダッシュボードに行くことができれば、ここにすべての情報を表示し、どのくらい進んでいるかを確認しました

充電されます。

エラーがある場合の価格設定メカニズムとは何ですか？

あります。

はい。

その情報はすべてここにあり、複数のバリアントを作成できます。

トラフィックを分割するので、トラフィックを分割し、設定できます

トラフィックがどのように処理されるかが、それはバージンサービスのアプリケーション階層です。
