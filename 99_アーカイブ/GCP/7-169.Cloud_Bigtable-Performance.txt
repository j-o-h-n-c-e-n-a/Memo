Let us look at some of the poor apartments characteristics of big table.

And we already know the performance is dependent on these processing nodes because the filesystem which

the big table uses its like horizontal and you cannot change the perimeter of the filesystem for being

more for apartment.

The only thing which you can change is the big table nodes.

So if you add in multiple nodes then your query performance will go high.

So notice the contention and the way nobody uses our stores the data in its filesystem whether it is

SSD or HDD that matters.

So it is the type of disk which you use it for your nodes and the number of nodes is the performance

characteristics of big table.

You calculate rate throughput and rate throughput.

And again that is based on the big table nodes.

You look at the replication and how you distribute the load like balancing the nodes.

And those are the performance characteristics of big table.

That's it guys.

We already saw how it helps.

And what are the characteristics for the nodes.

But if we have any questions let us know otherwise you can move to the next lecture.

Make table limits.


大きなテーブルの貧弱なアパートの特徴をいくつか見てみましょう。

そして、パフォーマンスがこれらの処理ノードに依存していることはすでにわかっています。

大きなテーブルはそのような水平を使用しているため、ファイルシステムの境界を変更することはできません

アパートの詳細。

変更できるのは、大きなテーブルノードのみです。

したがって、複数のノードを追加すると、クエリのパフォーマンスが高くなります。

競合と、誰もデータをファイルシステムに保存しない方法に注意してください。

重要なSSDまたはHDD。

したがって、ノードに使用するディスクのタイプであり、ノードの数はパフォーマンスです

大きなテーブルの特徴。

レートスループットとレートスループットを計算します。

繰り返しますが、これは大きなテーブルノードに基づいています。

レプリケーションと、ノードのバランスのような負荷の分散方法を確認します。

そして、それらは大きなテーブルのパフォーマンス特性です。

それはみんなです。

既にそれがどのように役立つかを見てきました。

そして、ノードの特性は何ですか。

ただし、質問がある場合はお知らせください。それ以外の場合は、次の講義に進むことができます。

テーブル制限を行います。