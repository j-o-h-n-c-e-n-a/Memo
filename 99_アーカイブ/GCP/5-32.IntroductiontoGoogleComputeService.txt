Compute service in Google flat platform.

In this lecture we are going to take all of you or I would say sneak peak of computers computing platform

as we understand it is one of the three core services that are available out of any cloud platform in

the context of Google cloud services.

There are four core services which are available and you can use it.

The first one is computing.

Second one is humanity's engine.

It's a Cuban it is implementation in Google Cloud Platform App Engine and cloud function if you look

at the way it is divided you know these computer services are the first one is the virtual machine are

the you know the plain simple virtual machine or virtual operating system which you get it you can provision

the resources that's the virtual machine.

And that is one category wherein you have full control on those.

Second one is you can either deploy code or you can deploy containers into the platform.

And third one is purely a new operations environment.

And it is sort of wordless in nature.

And for all of these three categories different cloud services provide different kind of offerings which

you can use it and you can even essentially map it badly one to one or one to many but these are three

different categories of computing services which are available for you to use it.

What is computer is in natural.

So the computer whiz provides the computing resources for your application to get it deployed.

So it has got CPR you can have you can ask for memory it has got associated disk in it right.

So all of that constitute a computing platform for an application to host it.

If we talk about purely in the context of we will cloud platform or in the context of the way you want

to deploy your application you can build a pyramid and that pyramid will give you a level of what you

want to do with the computing service or how you want to use it.

If you start with say what is your machine that's where you have full infrastructure control so you

can provision CPR use memory you can customize operating system and all that.

So you have full control and that is treated as a infrastructure as a service.

If you go higher in the pyramid you see that operations already get reduced but you start losing the

control on the resources as well.

So like continuous engine you can you know build and launch carbonate is engine in Google Cloud Platform

I mean Amazon as well they provide a container component is a service as well as they have their own

container orchestration system that's where you are you know everything is managed for you you just

ask for the resources and nodes are spinoff and all of that means you somehow get started losing the

control on the actual infrastructure you can do like with customization apps a platform like App Engine

and that is there in our low cloud platform and that is where you just push your code and you do not

worry about how the scaling will happen you can get trapped exploiting and all that but it is an abstracted

lever and if you look at the cloud function or Amazon lambda and that's where you push the cord but

you do not run that order you don't want to run that code in a continuous fashion you want to do that

based on some events right.

And that is the U.N. driven I would say and that is the that is the service which provides a kind of

true server list environment wherein you will be charged when the pension is running and you will not

be charged when the function is not running and that is the of at least kind of architecture.

So that is the whole pyramid.

You need to understand this and you can map this to any other cloud platform in the market let's understand

compute engine computing genius of virtual machine virtual machine or I would say VM in the cloud as

because it's a virtual machine it provides you full control of the resources operating system and you

can provision your own parameter into it.

So why someone will use computer engine.

So there are some requirements which are applications which cannot be couldn't be analyzed we're easily.

Application needs noise level changes you want to host your application like it is running in your virtual

machine are in your cellular in your data center and you want to take that application into cloud without

creating it all you want to have full control on your network physical hardware right that's where you

use a computer engine.

So typical use cases if you look at the compute engine it will sound too how are you.

You want to have full control on it will control on the the resources but at the same time there are

applications which are fact bulky and that cannot be containerized county computing engine in a nutshell

it's a virtual machine in clown seem like your server you can deploy it.

Applications ran back in jobs created data processing and all of that.

You can have your own software running in your you know your data center which you want to take it to

Google Cloud Platform you will get full control over the hardware adopting system customization it's

your own satellite in Google Cloud Platform but it was only in nature and either you can have your own

you know what tool machine and that is the control but at the same time you can have food and indeed

several physical server box as well.

So that's the computer engine if I go back to the next service and that is Cuban it is in June.

Cuban it is engine is not I would say it's not a new concept.

So what Cuban it is engine does is you can deploy your own docker containers or containers into your

own Cuban it is implementation you can take open it is an engine are carbonated software and install

it on your own datacenter and then you can deploy and manage containers the same way.

Google is offering the Cuban It is ingenious a man manage service and it's not only google it Amazon

provides it as you approach it and I think there are so many other cloud services provides it.

I heard that you an open ship planning to have Cuban it is engine support so that you can.

How common it is inside it.

So it's a it's a continual orchestration and management tool.

The typical use business are it's a secure we are a reliable way to scale your application in production

within underlying hardware is Google provided you don't have.

So the typical use case for this is you don't have any dependencies on specific operating system and

the condition I would say yeah application should be containerized which means you want two separate

application from doorways and if all these three conditions met definitely you can go for Cuban and

this in a chilled Cuban it is engine and open source container management and orchestration software

it is designed and developed by Google for their own needs initially and then they thought that you

know this can be used by other companies also to manage the containers as you're Microsoft and other

cloud providers started offering Cuban actors in June as a managed service and you can configure a Cuban

net is to run your application inhabited more and what does that mean says you can have some of the

nodes were called nodes surrounding your your own data center and some of the nodes in which allowed

platform are you can you and have some of the nodes are the clusters running inside as you are a W W.S.

and some of those are in Google Cloud Platform so it can run in the hybrid mode and this is the only

I think which I know as of now the component is is the only software which runs in hybrid mode for your

container management the next service that we have is App Engine and app using these like flexible zero

operations platform this is the service which came in order I would say this is the full service which

we will offer to the corporate customer to deploy their application into Google Cloud Platform you can

build reliable scalable applications component without doing it on your own as a infrastructures provisioning

it minimizes operational ordered you get developer velocity or infrastructure control and you can just

you know focus on writing code and just deploy that according to the App Engine you do not need to worry

about all other provisioning of cluster platform on infrastructure and that this is why it is called

as it your operations platform some of the bullet points about App Engine it is launched back in 2009

it is first that was available from Google towards the application you do not need to manage any platform

or hardware it has got smart defaults in it so that you do not need to worry about it but at the same

time you can customize it in deep context so that you will get majority of the control on your own you

can have your own applications deployed with just three commands and we are going to talk in detail

the features such as traffic splitting is and can redeployment is like major advantage of app engine

you can use standard environment which is like sandbox are flexible environment which supports containers

and you can have your own container build and deploy it in app engine.

The last one is cloud function and as we say it is even driven model and it is purely a subtle it's

economics and what is that it is absolutely no way what it all means you just deploy your code and the

code will see that unless and until there is an event which trigger that particular code and execute

what happens is Google only charge when your code is running and not any other time so that is very

important up to I think hundred milliseconds it is simple to implement with multiple endpoints and it's

purely even based code audit you can think of business code execution it is purely any wind base so

if you have a website you cannot deploy that into the cloud function because that's not the use case.

So high level bullet points for cloud function it's a true release with release economics connect and

extend your cloud services it's mobile really you can just write or add as a call into cloud function

it's open so support it supports IAP API and micro services and data processing EDL champs so in a nutshell

there are four services.

The first one is put a chill machine or computer engine.

There are always dependency if you want to have full control on hardware and software if you need voice

level changes and there are some applications which cannot be containerized are and installed into containers

in you not App Engine that's where you use virtual machine container engine.

It's Cuban it is implementation.

It's a managed service from the Google.

You can just go ahead and launch the and his cluster on a little our platform.

The requirements are the app should be containerized.

No.

Or is dependencies and it provides scalable production workload happened in it's like dude up ops platform.

You just write the code and deploy it according to the App Engine without provisioning any cluster or

anything.

And that's the advantage of App Engine noise dependencies scalable and you can do traffic splitting

cloud function is even based and purely server list means your if your function is not invoked.

You will not be charged and that's the beauty of opinion.

If I had to go to say

services here in Google Cloud Platform.

If I click on compute it says compute engine app engine component its engine cloud function.

All other services like Kinect you ride or cloud function or fire with all other these services are

divergence of core for services.

You can think of that okay.

So are providing additional advantage on top of what the call service provides.

We'll talk about these individual services based on what certification requirements are but not in here.

So you need to remember there are four services compute engine app ending Cooper and his engine and

cloud functions in Google Cloud Platform.

That's it guys.

As an overview of compute service or compute platform in Google Cloud Platform we will get into details

of all these services in next subsequent lectures.

Thank you.


Googleフラットプラットフォームのコンピューティングサービス。

この講義では、皆さん全員を取り上げます。または、コンピューターコンピューティングプラットフォームのスニークピークを言うでしょう。

私たちが理解しているように、それはどのクラウドプラットフォームからでも利用できる3つのコアサービスの1つです

Googleクラウドサービスのコンテキスト。

使用可能な4つのコアサービスがあり、使用できます。

最初の1つはコンピューティングです。

2つ目は、人類のエンジンです。

あなたが見るなら、それはGoogle Cloud Platform App Engineとクラウド機能で実装されているキューバです

分割された方法では、これらのコンピューターサービスは最初のものであり、仮想マシンは

プレーンシンプルな仮想マシンまたはそれを取得する仮想オペレーティングシステムを知っている場合は、プロビジョニングできます。

仮想マシンであるリソース。

そして、それはあなたがそれらを完全にコントロールできる一つのカテゴリーです。

2つ目は、コードをデプロイするか、コンテナをプラットフォームにデプロイできることです。

そして3つ目は、純粋に新しい運用環境です。

そして、それは本質的に一種の無言です。

これら3つのカテゴリすべてで、異なるクラウドサービスが提供するさまざまな種類のサービスを提供します。

あなたはそれを使うことができ、あなたは本質的にそれを1対1または1対多にマップすることさえできますが、これらは3つです

使用できるコンピューティングサービスのさまざまなカテゴリ。

コンピューターとは自然なものです。

そのため、コンピューターウィズは、アプリケーションをデプロイするためのコンピューティングリソースを提供します。

したがって、CPRがあり、関連するディスクを正しく持っているメモリを要求することができます。

そのため、これらすべてが、アプリケーションがホストするコンピューティングプラットフォームを構成します。

純粋にクラウドプラットフォームのコンテキストで、またはあなたが望む方法のコンテキストで話す場合

アプリケーションをデプロイするために、ピラミッドを構築できます。そのピラミッドは、あなたが何のレベルかを提供します

コンピューティングサービスまたはその使用方法を処理したい。

インフラストラクチャを完全に制御できるマシンはどこかと言うと、

CPRを使用してメモリをプロビジョニングでき、オペレーティングシステムなどをカスタマイズできます。

したがって、完全に制御でき、それはサービスとしてのインフラストラクチャとして扱われます。

ピラミッドの上位に移動すると、操作がすでに削減されていることがわかりますが、

同様にリソースの制御。

連続エンジンのように、Google Cloud Platformのエンジンである炭酸塩の構築と起動を知ることができます

つまり、Amazonはコンテナコンポーネントを提供するだけでなく、独自のサービスも持っているということです。

あなたがいるコンテナオーケストレーションシステムは、あなたのためだけにすべてが管理されていることを知っています

リソースとノードがスピンオフであることを要求します。これはすべて、何らかの形で

App Engineのようなプラットフォームのカスタマイズアプリを使用して、実際のインフラストラクチャを制御できます

そして、それは私たちの低クラウドプラットフォームにあり、あなたはあなたのコードをプッシュするだけでありません

スケーリングがどのように発生するかを心配してください。

レバーとクラウド機能またはAmazon lambdaを見て、コードを押す場所が

その順序を実行しないで、そのコードを継続的に実行したくない

いくつかのイベントに基づいています。

そして、それは私が言う国連主導であり、それはある種のサービスを提供するサービスです

年金が実行されているときに課金される真のサーバーリスト環境ではなく、

機能が実行されておらず、それが少なくとも一種のアーキテクチャである場合に課金されます。

これがピラミッド全体です。

これを理解する必要があり、これを市場の他のクラウドプラットフォームにマッピングできます。

コンピューティングエンジンコンピューティング天才の仮想マシン仮想マシン、またはクラウド内のVMとして

これは仮想マシンであるため、リソースオペレーティングシステムとユーザーを完全に制御できます。

独自のパラメータをそこにプロビジョニングできます。

だから誰かがコンピューターエンジンを使用する理由。

そのため、簡単に分析できないアプリケーションにはいくつかの要件があります。

アプリケーションは、仮想環境で実行されているように、アプリケーションをホストするノイズレベルの変更が必要です

マシンはデータセンターのセルラーにあり、そのアプリケーションをクラウドに持ち込む必要はありません

ネットワーク物理ハードウェアを完全に制御したいすべてを作成します。

コンピューターエンジンを使用します。

計算エンジンを見た場合の典型的なユースケースは、あなたの調子も良さそうです。

あなたはそれを完全に制御したいのですが、リソースを制御しますが、同時に

事実上かさばり、簡単に言えばコンテナー化された郡のコンピューティングエンジンにできないアプリケーション

それはあなたのサーバーのように展開できるピエロの仮想マシンです。

アプリケーションは、データ処理を作成するジョブで実行され、そのすべてが実行されました。

あなたはあなたがあなたがそれを持ち出したいあなたのデータセンターを知っているあなた自身で実行しているあなた自身のソフトウェアを持つことができます

Google Cloud Platformでは、システムのカスタマイズを採用するハードウェアを完全に制御できます

Google Cloud Platformで独自のサテライトを使用しますが、それは自然界にのみ存在し、独自のサテライトを持つことができます

あなたはどの工具機械を知っていて、それがコントロールですが、同時にあなたは食べ物を食べることができます

複数の物理サーバーボックスも同様です。

次のサービスに戻ると、それがコンピューターエンジンになります。それがキューバで、6月になります。

キューバのエンジンは新しい概念ではないと言うでしょう。

キューバのエンジンは、独自のドッカーコンテナまたはコンテナを展開できます。

独自のキューバは、あなたがそれを開くことができる実装であり、それはエンジンであり、炭酸化されたソフトウェアであり、インストールされます

独自のデータセンターに配置し、同じ方法でコンテナを展開および管理できます。

グーグルはキューバを提供しているそれは独創的で人管理サービスであり、それはグーグルそれだけではありませんアマゾン

あなたがそれに近づくとそれを提供し、私は非常に多くの他のクラウドサービスがそれを提供すると思います。

あなたがキューバを持っていることを計画しているあなたは、あなたができるようにエンジンをサポートしていると聞いています。

それがどれほど一般的か。

ですから、継続的なオーケストレーションおよび管理ツールです。

典型的な使用ビジネスは安全であり、実稼働環境でアプリケーションをスケーリングするための信頼できる方法です

基礎となるハードウェア内には、Googleが提供していないものがあります。

そのため、これの典型的な使用例は、特定のオペレーティングシステムに依存していないことです。

ええ、アプリケーションはコンテナ化する必要があります。つまり、2つの個別の

出入り口から申請し、これら3つの条件がすべて満たされた場合、キューバに行くことができます

これは、冷蔵されたキューバ語で、エンジンおよびオープンソースのコンテナ管理およびオーケストレーションソフトウェアです

最初にGoogleが独自のニーズに合わせて設計および開発したもので、

これは、Microsoftや他のユーザーとしてコンテナを管理するために他の会社でも使用できることを知っている

クラウドプロバイダーは6月にキューバアクターのマネージドサービスの提供を開始しました。キューバを設定できます

ネットはより多くの人が住んでいるアプリケーションを実行することであり、それはどういう意味ですか

ノードは、独自のデータセンターを囲むノードと呼ばれ、許可されたノードの一部

あなたができるプラットフォームは、あなたがW W.Sであるので、いくつかのノードが内部で実行されているクラスタです

これらの一部はGoogle Cloud Platformにあり、ハイブリッドモードで実行できます。これが唯一の方法です

私が今知っているのは、コンポーネントがあなたのためにハイブリッドモードで実行する唯一のソフトウェアだと思います

コンテナ管理私たちが持っている次のサービスはApp Engineと、これらを使用するフレキシブルゼロのようなアプリです

運用プラットフォームこれは、順番に来たサービスです。これは完全なサービスです。

法人のお客様にアプリケーションをGoogle Cloud Platformに展開することを提案します。

インフラストラクチャプロビジョニングとして独自に実行することなく、信頼性の高いスケーラブルなアプリケーションコンポーネントを構築する

開発者の速度やインフラストラクチャの制御を得ることができる操作可能な順序を最小限に抑え、

コードを書くことに集中し、心配する必要のないApp Engineに従って展開するだけです。

インフラストラクチャ上のクラスタプラットフォームの他のすべてのプロビジョニングについて、そしてそれがそれが呼ばれる理由である

オペレーションプラットフォームとして、App Engineに関する箇条書きのいくつかは2009年にリリースされました。

プラットフォームを管理する必要のないアプリケーションに向けてGoogleから提供された最初のものです

またはハードウェアにはスマートなデフォルトが設定されているため、心配する必要はありませんが、同時に

自分でコントロールの大部分を取得できるように、深いコンテキストでカスタマイズできます

わずか3つのコマンドで独自のアプリケーションをデプロイできます。詳細を説明します

トラフィック分割などの機能は、再展開が可能であり、アプリエンジンの主な利点のようなものです。

サンドボックスはコンテナをサポートする柔軟な環境のような標準環境を使用できます

また、独自のコンテナを作成してApp Engineにデプロイできます。

最後の1つはクラウド機能です。私たちが言うように、それは駆動モデルでさえあり、純粋に微妙です。

経済学とは何ですか、それはあなたがあなたのコードと

コードは、その特定のコードをトリガーして実行するイベントがない限り、それまではそれを確認します

何が起こるかは、コードが実行されているときにのみ課金され、それ以外の時間には課金されないため、

重要なのは、100ミリ秒で、複数のエンドポイントで簡単に実装でき、

純粋にベースのコード監査でも、ビジネスコードの実行を考えることができます。

Webサイトがある場合、クラウド機能にデプロイすることはできません。これはユースケースではないためです。

クラウド機能の高レベルの箇条書きは、リリースの経済性がつながる真のリリースであり、

クラウドサービスを拡張します。モバイルです。クラウド機能への呼び出しとして記述または追加するだけです。

オープンであるため、IAP APIおよびマイクロサービスとデータ処理EDLチャンプをサポートします。

4つのサービスがあります。

最初のものは、チルマシンまたはコンピューターエンジンを置きます。

音声が必要な場合、ハードウェアとソフトウェアを完全に制御したい場合は常に依存関係があります

レベルが変更され、コンテナ化できないアプリケーションがいくつかあり、コンテナにインストールされます

仮想マシンのコンテナエンジンを使用するApp Engineではなく、あなたの中で。

それは実装であるキューバです。

Googleのマネージドサービスです。

少し先に進んで、彼のクラスターを小さなプラットフォームで起動することができます。

要件は、アプリをコンテナ化する必要があることです。

番号。

または依存関係であり、スケーラブルな運用ワークロードを提供します。これは、opsプラットフォームのようなものです。

コードを記述し、クラスターをプロビジョニングせずにApp Engineに従って展開するか、

何でも。

そして、それがスケーラブルなApp Engineノイズ依存性の利点であり、トラフィックの分割を行うことができます

クラウド機能もベースであり、純粋にサーバーリストは、機能が呼び出されない場合にあなたを意味します。

あなたは請求さ​​れません、それは意見の美しさです。

言いに行かなければならなかったら

Google Cloud Platformのサービス。

計算をクリックすると、計算エンジンアプリエンジンコンポーネントのエンジンクラウド機能と表示されます。

あなたが乗るKinectのような他のすべてのサービス、クラウド機能、またはこれらすべての他のサービスとの連携

サービスの中核の発散。

大丈夫だと思うことができます。

コールサービスが提供するものに加えて、追加の利点を提供しています。

これらの個々のサービスについては、認定要件に基づいて説明しますが、ここでは説明しません。

したがって、クーパーとそのエンジンを終了する4つのサービスコンピューティングエンジンアプリがあることを覚えておく必要があります。

Google Cloud Platformのクラウド機能。

それはみんなです。

Google Cloud Platformのコンピューティングサービスまたはコンピューティングプラットフォームの概要として、詳細を説明します

次の講義でこれらすべてのサービスの。

ありがとうございました。