Compute service in Google flat platform.

In this lecture we are going to take all of you or I would say sneak peak of computers computing platform

as we understand it is one of the three core services that are available out of any cloud platform in

the context of Google cloud services.

There are four core services which are available and you can use it.

The first one is computing.

Second one is humanity's engine.

It's a Cuban it is implementation in Google Cloud Platform App Engine and cloud function if you look

at the way it is divided you know these computer services are the first one is the virtual machine are

the you know the plain simple virtual machine or virtual operating system which you get it you can provision

the resources that's the virtual machine.

And that is one category wherein you have full control on those.

Second one is you can either deploy code or you can deploy containers into the platform.

And third one is purely a new operations environment.

And it is sort of wordless in nature.

And for all of these three categories different cloud services provide different kind of offerings which

you can use it and you can even essentially map it badly one to one or one to many but these are three

different categories of computing services which are available for you to use it.

What is computer is in natural.

So the computer whiz provides the computing resources for your application to get it deployed.

So it has got CPR you can have you can ask for memory it has got associated disk in it right.

So all of that constitute a computing platform for an application to host it.

If we talk about purely in the context of we will cloud platform or in the context of the way you want

to deploy your application you can build a pyramid and that pyramid will give you a level of what you

want to do with the computing service or how you want to use it.

If you start with say what is your machine that's where you have full infrastructure control so you

can provision CPR use memory you can customize operating system and all that.

So you have full control and that is treated as a infrastructure as a service.

If you go higher in the pyramid you see that operations already get reduced but you start losing the

control on the resources as well.

So like continuous engine you can you know build and launch carbonate is engine in Google Cloud Platform

I mean Amazon as well they provide a container component is a service as well as they have their own

container orchestration system that's where you are you know everything is managed for you you just

ask for the resources and nodes are spinoff and all of that means you somehow get started losing the

control on the actual infrastructure you can do like with customization apps a platform like App Engine

and that is there in our low cloud platform and that is where you just push your code and you do not

worry about how the scaling will happen you can get trapped exploiting and all that but it is an abstracted

lever and if you look at the cloud function or Amazon lambda and that's where you push the cord but

you do not run that order you don't want to run that code in a continuous fashion you want to do that

based on some events right.

And that is the U.N. driven I would say and that is the that is the service which provides a kind of

true server list environment wherein you will be charged when the pension is running and you will not

be charged when the function is not running and that is the of at least kind of architecture.

So that is the whole pyramid.

You need to understand this and you can map this to any other cloud platform in the market let's understand

compute engine computing genius of virtual machine virtual machine or I would say VM in the cloud as

because it's a virtual machine it provides you full control of the resources operating system and you

can provision your own parameter into it.

So why someone will use computer engine.

So there are some requirements which are applications which cannot be couldn't be analyzed we're easily.

Application needs noise level changes you want to host your application like it is running in your virtual

machine are in your cellular in your data center and you want to take that application into cloud without

creating it all you want to have full control on your network physical hardware right that's where you

use a computer engine.

So typical use cases if you look at the compute engine it will sound too how are you.

You want to have full control on it will control on the the resources but at the same time there are

applications which are fact bulky and that cannot be containerized county computing engine in a nutshell

it's a virtual machine in clown seem like your server you can deploy it.

Applications ran back in jobs created data processing and all of that.

You can have your own software running in your you know your data center which you want to take it to

Google Cloud Platform you will get full control over the hardware adopting system customization it's

your own satellite in Google Cloud Platform but it was only in nature and either you can have your own

you know what tool machine and that is the control but at the same time you can have food and indeed

several physical server box as well.

So that's the computer engine if I go back to the next service and that is Cuban it is in June.

Cuban it is engine is not I would say it's not a new concept.

So what Cuban it is engine does is you can deploy your own docker containers or containers into your

own Cuban it is implementation you can take open it is an engine are carbonated software and install

it on your own datacenter and then you can deploy and manage containers the same way.

Google is offering the Cuban It is ingenious a man manage service and it's not only google it Amazon

provides it as you approach it and I think there are so many other cloud services provides it.

I heard that you an open ship planning to have Cuban it is engine support so that you can.

How common it is inside it.

So it's a it's a continual orchestration and management tool.

The typical use business are it's a secure we are a reliable way to scale your application in production

within underlying hardware is Google provided you don't have.

So the typical use case for this is you don't have any dependencies on specific operating system and

the condition I would say yeah application should be containerized which means you want two separate

application from doorways and if all these three conditions met definitely you can go for Cuban and

this in a chilled Cuban it is engine and open source container management and orchestration software

it is designed and developed by Google for their own needs initially and then they thought that you

know this can be used by other companies also to manage the containers as you're Microsoft and other

cloud providers started offering Cuban actors in June as a managed service and you can configure a Cuban

net is to run your application inhabited more and what does that mean says you can have some of the

nodes were called nodes surrounding your your own data center and some of the nodes in which allowed

platform are you can you and have some of the nodes are the clusters running inside as you are a W W.S.

and some of those are in Google Cloud Platform so it can run in the hybrid mode and this is the only

I think which I know as of now the component is is the only software which runs in hybrid mode for your

container management the next service that we have is App Engine and app using these like flexible zero

operations platform this is the service which came in order I would say this is the full service which

we will offer to the corporate customer to deploy their application into Google Cloud Platform you can

build reliable scalable applications component without doing it on your own as a infrastructures provisioning

it minimizes operational ordered you get developer velocity or infrastructure control and you can just

you know focus on writing code and just deploy that according to the App Engine you do not need to worry

about all other provisioning of cluster platform on infrastructure and that this is why it is called

as it your operations platform some of the bullet points about App Engine it is launched back in 2009

it is first that was available from Google towards the application you do not need to manage any platform

or hardware it has got smart defaults in it so that you do not need to worry about it but at the same

time you can customize it in deep context so that you will get majority of the control on your own you

can have your own applications deployed with just three commands and we are going to talk in detail

the features such as traffic splitting is and can redeployment is like major advantage of app engine

you can use standard environment which is like sandbox are flexible environment which supports containers

and you can have your own container build and deploy it in app engine.

The last one is cloud function and as we say it is even driven model and it is purely a subtle it's

economics and what is that it is absolutely no way what it all means you just deploy your code and the

code will see that unless and until there is an event which trigger that particular code and execute

what happens is Google only charge when your code is running and not any other time so that is very

important up to I think hundred milliseconds it is simple to implement with multiple endpoints and it's

purely even based code audit you can think of business code execution it is purely any wind base so

if you have a website you cannot deploy that into the cloud function because that's not the use case.

So high level bullet points for cloud function it's a true release with release economics connect and

extend your cloud services it's mobile really you can just write or add as a call into cloud function

it's open so support it supports IAP API and micro services and data processing EDL champs so in a nutshell

there are four services.

The first one is put a chill machine or computer engine.

There are always dependency if you want to have full control on hardware and software if you need voice

level changes and there are some applications which cannot be containerized are and installed into containers

in you not App Engine that's where you use virtual machine container engine.

It's Cuban it is implementation.

It's a managed service from the Google.

You can just go ahead and launch the and his cluster on a little our platform.

The requirements are the app should be containerized.

No.

Or is dependencies and it provides scalable production workload happened in it's like dude up ops platform.

You just write the code and deploy it according to the App Engine without provisioning any cluster or

anything.

And that's the advantage of App Engine noise dependencies scalable and you can do traffic splitting

cloud function is even based and purely server list means your if your function is not invoked.

You will not be charged and that's the beauty of opinion.

If I had to go to say

services here in Google Cloud Platform.

If I click on compute it says compute engine app engine component its engine cloud function.

All other services like Kinect you ride or cloud function or fire with all other these services are

divergence of core for services.

You can think of that okay.

So are providing additional advantage on top of what the call service provides.

We'll talk about these individual services based on what certification requirements are but not in here.

So you need to remember there are four services compute engine app ending Cooper and his engine and

cloud functions in Google Cloud Platform.

That's it guys.

As an overview of compute service or compute platform in Google Cloud Platform we will get into details

of all these services in next subsequent lectures.

Thank you.

Googleフラットプラットフォームにおける計算サービス。

この講義では、コンピュータ・コンピューティング・プラットフォームのスニークピークとでも言うべきものを皆さんにお見せしたいと思います。

この講義では、コンピュータ・コンピューティング・プラットフォームのスニークピークとでも言うべき、3つのコア・サービスのうちの1つを紹介します。

Googleのクラウドサービスでは、4つのコアサービスがあります。

利用可能で、あなたがそれを使用することができます4つのコアサービスがあります。

1つ目は、コンピューティングです。

2番目のものは、人類のエンジンです。

これはキューバンで、Google Cloud PlatformのApp Engineとクラウド機能で実装されています。

このコンピュータ・サービスの分け方を見ると、最初のものは仮想マシンです。

単純な仮想マシンや仮想オペレーティング・システムで、これを手に入れれば、リソースをプロビジョニングすることができます。

これが仮想マシンです。

これは完全なコントロールが可能なカテゴリーです。

2つ目は、コードをデプロイすることも、コンテナをプラットフォームにデプロイすることもできます。

そして3つ目は、純粋に新しいオペレーション環境です。

この3つのカテゴリーは、いずれも言葉を使わないのが特徴です。

この3つのカテゴリーについては、クラウドサービスによって提供されるサービス内容が異なります。

この3つのカテゴリでは、異なるクラウドサービスが異なる種類のサービスを提供しており、それを利用することもできますし、1対1や1対多でマッピングすることもできます。

しかし、これらは、あなたがそれを使用するために利用可能なコンピューティング・サービスの3つの異なるカテゴリです。

コンピュータとは、自然の中にあるものです。

コンピュータは、あなたのアプリケーションをデプロイするためのコンピューティングリソースを提供します。

だから、それはあなたが持っていることができるCPRを持っているあなたは、メモリを要求することができますそれは右のそれに関連するディスクを持っています。

これらすべてが、アプリケーションをホストするためのコンピューティングプラットフォームを構成しているわけです。

純粋にクラウドプラットフォームの文脈で、あるいはアプリケーションを展開する方法の文脈で話をすると、アプリケーションを構築することができます。

ピラミッドを作ると、そのピラミッドによって、コンピューティング・サービスやアプリケーションで何をしたいかというレベルが分かります。

ピラミッドを作ると、コンピューティング・サービスで何をしたいか、どのように使いたいかというレベルがわかります。

このピラミッドでは、コンピューティング・サービスで何をしたいか、どのように使いたいかというレベルが与えられます。

CPRのプロビジョニング、メモリの使用、OSのカスタマイズ、その他もろもろ。

つまり、インフラを完全にコントロールすることができ、それはサービスとしてのインフラとして扱われます。

ピラミッドの上位に行くと、オペレーションはすでに削減されていますが、リソースのコントロールも失われ始めています。

リソースのコントロールもできなくなります。

Google Cloud Platformでは炭酸ガスエンジンを構築して立ち上げることができます。

Amazonも同様に、コンテナ・コンポーネントをサービスとして提供していますし、独自のコンテナ・オーケストレーション・システムも持っています。

コンテナ・オーケストレーション・システムがあり、そこではすべてが管理されています。

リソースを要求するだけで、ノードはスピンオフされ、実際のインフラストラクチャのコントロールを失うことになります。

App Engineのようなプラットフォームを使えば、カスタマイズアプリのように実際のインフラをコントロールすることができます。

のようなプラットフォームがあります。

スケーリングがどうなるかを心配する必要はありません。

クラウド関数やAmazon lambdaを見ると、コードをプッシュする場所ですが、順番に実行するわけではありません。

そのコードを連続的に実行するのではなく、あるイベントに基づいて実行したいのです。

イベントに基づいて実行されます。

そしてこれが国連主導で、本当の意味でのサーバーリスト環境を提供するサービスです。

年金が動いているときは課金され、動いていないときは課金されないという、本当の意味でのサーバーリスト環境です。

年金が動いているときは課金され、機能が動いていないときは課金されないという、少なくともそういうアーキテクチャになっています。

これがピラミッドの全体像です。

これを理解すれば、市場にある他のクラウド・プラットフォームにも当てはめることができます。

クラウドの仮想マシンVMのコンピューティングの天才を理解しましょう。

仮想マシンであるため、リソースのオペレーティング・システムを完全に制御することができ、独自のパラメータをプロビジョニングすることができます。

独自のパラメータを設定することができます。

では、なぜコンピュータエンジンを使うのでしょうか。

アプリケーションには、簡単に分析できないような要件もあります。

アプリケーションは、それがあなたの仮想マシン上で実行されているように、あなたのアプリケーションをホストしたいノイズレベルの変更を必要とします。

データセンターのセルラーにあるマシンを使って、アプリケーションを作成せずにクラウドに移行したい場合

を作成することなく、そのアプリケーションをクラウドに移行したい場合、ネットワークの物理的なハードウェアを完全に制御する必要があります。

コンピュータ・エンジンを使用します。

典型的な使用例としては、コンピュート・エンジンを見てみると、あなたはどう思いますか？

リソースは完全にコントロールしたいが、同時に、実際かさばるアプリケーションもある。

一方、アプリケーションの中には、コンテナ化できないような巨大なものもあります。

これは、サーバーのように見えるピエロの仮想マシンで、それをデプロイすることができます。

アプリケーションは、データ処理とそのすべての作成されたジョブで戻って実行されます。

自分のソフトウェアを自分のデータセンターで動作させることができます。

Google Cloud Platformでは、システムのカスタマイズを採用したハードウェアを完全に制御することができます。

Google Cloud Platformでは独自の衛星を利用することができますが、それはあくまで自然界に存在するものであり、独自のツールマシンを持つこともできます。

を持つこともできますし、同時に食べ物や複数の物理サーバーを持つこともできます。

物理的なサーバーボックスもいくつかあります。

次のサービス、キューバンに話を戻しますが、これは6月に行われたものです。

Cuban it is engineは新しいコンセプトではありません。

Cuban it is engineでできることは、自分のDockerコンテナやコンテナを、自分のCuban it is実装にデプロイできることです。

キューバン・イッツ・ア・インプリメンテーションは、炭酸化されたソフトウェアであるオープン・イッツ・ア・エンジンを、自分のデータセンターにインストールすることができます。

自分のデータセンターにインストールして、同じようにコンテナをデプロイし、管理することができます。

GoogleはCuban It is ingeniousというサービスを提供していますが、これはGoogleだけでなく、Amazonも提供しています。

も提供していますし、他にも多くのクラウドサービスが提供していると思います。

オープンシップでは、Cubanのエンジンサポートができるように計画していると聞いています。

その中で、いかに一般的なものであるか。

つまり、継続的なオーケストレーションとマネジメントのためのツールなのです。

典型的な用途は、アプリケーションを本番環境で拡張するための安全で信頼性の高い方法です。

また、基盤となるハードウェアは Google が提供するため、ユーザーはハードウェアを所有する必要がありません。

典型的な使用例としては、特定のオペレーティング・システムに依存しないことです。

アプリケーションをコンテナ化することです。つまり、2つの独立したアプリケーションが必要です。

この3つの条件をすべて満たせば、キューバンに行くことができます。

Cubanはエンジンで、オープンソースのコンテナ管理・オーケストレーションソフトウェアです。

Googleが自社のニーズに合わせて設計・開発したものです。

マイクロソフトや他のクラウドプロバイダーがCubanを提供し始めたように、他の企業もコンテナ管理に使えると考えたのです。

クラウドプロバイダーは6月にキューバンアクターをマネージドサービスとして提供し始め、キューバンネットを構成することができます。

キューバン・ネットは、アプリケーションをより多く居住させて実行するものです。

ノードが自分のデータセンターを取り囲んでいるノードと呼ばれるもので、その中のいくつかのノードは許可されています。

プラットフォームは、あなたがWWSであるように内部で実行されているクラスタであるノードのいくつかを持つことができます。

ハイブリッドモードで動作させることができます。

このコンポーネントは、ハイブリッドモードで動作する唯一のソフトウェアです。

次のサービスはApp Engineで、柔軟なゼロ・オペレーション・プラットフォームです。

これは、法人のお客様に提供するフルサービスです。

をGoogle Cloud Platformにデプロイするために提供するサービスです。

信頼性の高いスケーラブルなアプリケーションを構築することができます。

インフラストラクチャのプロビジョニングを行うことで、運用を最小限に抑え、開発者のスピードとインフラストラクチャのコントロールを得ることができます。

コードを書くことに集中でき、App Engineに従ってデプロイするだけで、クラスタプラットフォームの他のすべてのプロビジョニングを心配する必要がない。

インフラ上のクラスタープラットフォームのプロビジョニングについて、他のすべてのことを心配する必要はありません。

App Engineは2009年にGoogleから発売されました。

アプリケーションのためにGoogleから提供された最初のもので、プラットフォームやハードウェアを管理する必要はありません。

ハードウェアを管理する必要がなく、スマートなデフォルトを備えているので、心配する必要はありません。

同時に、深い文脈でカスタマイズできるので、自分自身でコントロールの大部分を得ることができます。

たった3つのコマンドで、あなた自身のアプリケーションをデプロイすることができます。

トラフィックの分割や再デプロイメントが可能なのは、App Engineの大きな特徴です。

サンドボックスのような標準環境と、コンテナに対応した柔軟な環境を使い分けることができます。

独自のコンテナを構築し、それをApp Engineにデプロイすることができます。

最後に、クラウド機能ですが、これはイーブンドリブンモデルで、純粋に微妙なものです。

これは経済的なもので、コードをデプロイするだけで、そのコードにアクセスできるようになります。

そのコードが実行されるイベントがない限り、そして実行されるまでは、Googleはあなたのコードに課金します。

Googleが課金するのはコードが実行されているときだけで、それ以外のときは課金されないので、これは非常に重要なことです。

複数のエンドポイントに実装するのは簡単で、純粋に均等なコード監査が可能です。

純粋に偶数ベースのコード監査で、ビジネスコードの実行を考えることができます。

Webサイトがあっても、それをクラウド機能にデプロイすることはできません。

クラウド機能に関するハイレベルな箇条書きは以下のとおりです。

クラウド・サービスに接続し、拡張することができる モバイルであり、クラウド・ファンクションに書き込んだり、コールとして追加したりできる

オープンなので、IAP API、マイクロサービス、データ処理、EDLチャンプをサポートします。

4つのサービスがあります。

まず1つ目は、チルマシーンやコンピュータエンジンを置くことです。

ハードウェアとソフトウェアを完全に制御したい場合は、常に依存関係があります。

また、コンテナ化できないアプリケーションはコンテナにインストールされます。

App Engineではなく、仮想マシンのコンテナ・エンジンを使用します。

これはキューバンの実装です。

これはGoogleのマネージドサービスです。

私たちのプラットフォームで、彼のクラスターを立ち上げることができます。

アプリはコンテナ化されている必要があります。

いいえ。

あるいは依存関係があり、スケーラブルな本番ワークロードを提供する、いわば運用プラットフォームのようなものです。

コードを書いて、App Engineに従ってデプロイするだけで、クラスタやその他のプロビジョニングは不要です。

これがApp Engineの利点です。

App Engineの利点は、ノイズ依存のスケーラビリティと、トラフィックの分割が可能なことです。

クラウド機能はイーブンベースで、純粋なサーバーリストなので、もしあなたの機能が呼び出されなかったら、課金されません。

そのため、自分の機能が起動しなければ、課金されることはありません。

もし、私が

Google Cloud Platformのサービスです。

コンピュートをクリックすると、コンピュートエンジン、アプリエンジンコンポーネント、エンジンクラウドファンクションと表示されます。

他のサービス、例えばKinect you rideとか、クラウド機能とか、Fireとか、これらのサービスは全て、サービスのコアとなる部分と乖離しています。

サービスのためのコアの分岐点です。

そのように考えていただいて結構です。

つまり、サービスというものが提供するものの上に、さらなる利点を提供しているのです。

個々のサービスについては、認定要件に基づいて説明しますが、ここでは触れません。

Google Cloud Platformには4つのサービス、コンピュート・エンジン・アプリ・エンディング・クーパーとそのエンジン、そしてクラウド機能があります。

Google Cloud Platformのクラウド機能です。

それはそれだみんな。

Google Cloud Platformのコンピュート・サービスやコンピュート・プラットフォームの概要については、次回の講義で詳しく説明する予定です。

の詳細については、次回の講義で説明します。

ありがとうございました。
