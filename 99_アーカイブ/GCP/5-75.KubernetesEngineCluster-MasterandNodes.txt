M. and Nora configurations.

So if we look at as we said it's a distributed system it has got a master and the worker nodes are for

your application to host it.

So it has a garden master and all other work nodes are connected to the master these workers nodes are

used to deploy your actual application.

Okay.

So we need to look at what are the highly well concepts are high level activities done by the master

so Master node it is endpoint our doorway to the cluster it supports carbonate is API server so it takes

all this obviously a rest request schedules part creation deletion under nodes sync the port info with

the service input and it does the cloud service integration so that is the whole work of master so master

this like you can think of it's the entry to the cluster you can authentically reach out to the individual

you know the services in the node order it is not managed that way it is managed by master itself if

you look at the nodes the notes are actual nodes in the cluster and those the nodes actually hold your

docker containers and that is where you can treat that as a work of node and nodes.

This work of nodes runs Docker it has got rid of quarantine so it does what it wants and the doctor

containers it has got to let agent you have network proxy and it runs spot then parts.

So what is the concept of port we are going to see that shortly but these nodes are the worker nodes

that's where your application is actually running.

Based on that requirement or demand you can have multiple nodes running and you can have multiple versions

of board deployed into these nodes and we we can see that later in the section.

So that's the high level cluster you can think of cone configuration as a master nodes master and nodes.

Let's look at Bharti next lecture.

M.およびNora構成。

先ほど述べたように、分散システムであるため、マスターがあり、ワーカーノードは

ホストするアプリケーション。

そのため、ガーデンマスターがあり、他のすべての作業ノードは、これらのワーカーノードがマスターに接続されています

実際のアプリケーションをデプロイするために使用されます。

はい。

だから私たちはマスターによって行われる高レベルの活動である非常によく概念が何であるかを見る必要があります

マスターノードはエンドポイントであり、炭酸塩をサポートするクラスターへの入り口はAPIサーバーなので、

これらすべては明らかに、残りのリクエストがノードの下で部品作成の削除をスケジュールし、ポート情報を

サービスの入力とクラウドサービスの統合を行います

これは、あなたが本物の個人に手を差し伸べることができるクラスタへのエントリだと考えることができるように

ノードの順序でサービスがわかっている場合、マスター自体によって管理されている方法では管理されません。

ノードを見ると、ノートはクラスター内の実際のノードであり、ノードは実際にノードを保持しています

Dockerコンテナとは、それをノードとノードのワークとして扱うことができる場所です。

ノードのこの作業は、隔離を取り除いたDockerを実行するため、必要なことを行い、医師は

コンテナは、エージェントにネットワークプロキシを持たせ、スポットパーツを実行します。

したがって、ポートの概念はどのようなものかをすぐに確認しますが、これらのノードはワーカーノードです

アプリケーションが実際に実行されている場所です。

その要件または要求に基づいて、複数のノードを実行し、複数のバージョンを使用できます。

ボードのこれらのノードに展開され、セクションの後半で見ることができます。

これが、コーン構成をマスターノードマスターおよびノー​​ドと考えることができる高レベルのクラスターです。

バルティの次の講義を見てみましょう。
